datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum Role {
  USER
  ADMIN
}

model User {
  id            String    @id @default(cuid())
  role          Role      @default(USER)
  name          String?
  image         String?
  email         String?   @unique
  emailVerified Boolean?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Brand {
  id        Int         @id @default(autoincrement())
  name      String      @unique
  slug      String      @unique
  products  Product[]
}

model Category {
  id              Int     @id @default(autoincrement())
  name            String  @unique
  slug            String  @unique
  subcategories   SubCategory[]
}

model SubCategory {
  id          Int         @id @default(autoincrement())
  name        String      @unique
  slug        String      @unique
  categoryId  Int
  products    Product[]
  category    Category    @relation(fields: [categoryId], references: [id], onDelete: Cascade)
}

model Product {
  id              Int           @id @default(autoincrement())
  name            String        @unique
  slug            String        @unique
  modelNumber     String        @unique
  price           Int
  brandId         Int
  subCategoryId   Int
  images          Json
  overview        String        @db.Text
  specifications  Json
  warranty        String

  subCategory     SubCategory   @relation(fields: [subCategoryId], references: [id])
  brand           Brand         @relation(fields: [brandId], references: [id])
}