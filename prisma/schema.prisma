datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum Role {
  USER
  ADMIN
}

model User {
  id            String    @id @default(cuid())
  role          Role      @default(USER)
  name          String?
  image         String?
  email         String?   @unique
  emailVerified Boolean?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model OrderProduct {
  id       String  @id @default(cuid())
  name     String
  slug     String
  price    Int
  quantity Int
  Order    Order?  @relation(fields: [orderId], references: [id])
  orderId  Int?
}

model Order {
  id                Int        @id @default(autoincrement())
  products          OrderProduct[]
  billingFirstName  String
  billingLastName   String
  billingTelephone  String
  billingAddress1   String
  billingAddress2   String
  billingPostcode   String
  billingSuburb     String
  billingState      String
  deliveryFirstName String
  deliveryLastName  String
  deliveryAddress1  String
  deliveryAddress2  String
  deliveryPostcode  String
  deliverySuburb    String
  deliveryState     String
  shippingMethod    String
  shippingPrice     Int
}
